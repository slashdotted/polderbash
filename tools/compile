#!/bin/bash
# 
# This file is part of PoelderBash
# Copyright (c) 2016 Amos Brocco.
# 
# This program is free software: you can redistribute it and/or modify  
# it under the terms of the GNU General Public License as published by  
# the Free Software Foundation, version 3.
#
# This program is distributed in the hope that it will be useful, but 
# WITHOUT ANY WARRANTY; without even the implied warranty of 
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU 
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License 
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#

function update_progress {
	echo 1>&2 -en "\033[2K"
	echo 1>&2 -en "\rProcessing cells... ${1}%"
}

function compile_level {
	if [ ! -f $1 ]; then
		echo 1>&2 "Cannot open level file $1"
		exit 1
	fi
	echo 1>&2 -n "Processing tiles... "
	echo -n "level_plan=\$(cat<<-EOF"
	echo "$(xpath -e "//tiles/text()" $1 2>/dev/null | sed -e "s/[[:blank:]]//g")"
	echo "EOF"
	echo ")"
	echo 1>&2 "100%"
	echo 1>&2 -n "Processing labels... "
	timel=$(xpath -e "//label[@type=\"time\"]/text()" $1 2>/dev/null)
	scorel=$(xpath -e "//label[@type=\"score\"]/text()" $1 2>/dev/null)
	hintl=$(xpath -e "//label[@type=\"hint\"]/text()" $1 2>/dev/null)
	phint=$(xpath -e "//player/hint/text()" $1 2>/dev/null)
	sr=$(xpath -e "//player/@startrow" bash_level1.xml 2>/dev/null | cut -d'=' -f2 | tr '"' ' ' | sed -e "s/ //g")
	sc=$(xpath -e "//player/@startcol" bash_level1.xml 2>/dev/null | cut -d'=' -f2 | tr '"' ' ' | sed -e "s/ //g")
	sd=$(xpath -e "//player/@startdir" bash_level1.xml 2>/dev/null | cut -d'=' -f2 | tr '"' ' ' | sed -e "s/ //g")
	sp=$(xpath -e "//player/@startpersona" bash_level1.xml 2>/dev/null | cut -d'=' -f2 | tr '"' ' ' | sed -e "s/ //g")
	echo "player_start_x=$sc"
	echo "player_start_y=$sr"
	echo "player_start_d=$sd"
	echo "player_start_p=$sp"
	echo "player_hint=\"$phint\""
	if [ -n "$timel" ]; then
		echo "time_label=\"$timel\""
	fi
	if [ -n "$scorel" ]; then
		echo "score_label=\"$scorel\""
	fi
	if [ -n "$hintl" ]; then
		echo "hint_label=\"$hintl\""
	fi
	echo 1>&2 "100%"
	index=0
	for ((i=0;i<15;i++)) do
		for ((j=0;j<15;j++)) do
			let index+=1
			update_progress $(expr $index \* 100 / 225)
			local hint=$(xpath -e "//cell[@row=$i and @col=$j]/hint/text()" $1 2>/dev/null | tr '\n' ' ' | sed -e "s/\"/\\\\\"/g" | sed -e "s/\\$/\\\\$/g")
			if [ -n "$hint" ]; then
				echo "cell_hint_${i}_${j}=\"$hint\""		
				local test=$(xpath -e "//cell[@row=$i and @col=$j]/test/text()" $1 2>/dev/null | tr '\n' ' ' | sed -e "s/\"/\\\\\"/g" | sed -e "s/\\$/\\\\$/g")
				if [ -n "$test" ]; then
					echo "cell_test_${i}_${j}=\"$test\""
				fi
			fi
		done
	done

	echo 1>&2 ""
}

if [ $# -ne 1 ]; then
	echo 1>&2 "usage: $0 xmlfile"
fi

echo 1>&2 "Compiling to ${1%%.xml}.poe"
compile_level $1 | gzip > ${1%%.xml}.poe



